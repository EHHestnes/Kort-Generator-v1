/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kortautotext;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Graphics;
import static java.awt.SystemColor.desktop;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author Erlend
 */
public class Vising extends javax.swing.JFrame {

    int engang = 0;
    ArrayList aList = new ArrayList();
    ArrayList al = new ArrayList();

    /**
     * Creates new form Vising
     */
    public Vising() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        jLabel19 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox68 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox78 = new javax.swing.JComboBox<>();
        jComboBox88 = new javax.swing.JComboBox<>();
        jComboBox99 = new javax.swing.JComboBox<>();
        jComboBox109 = new javax.swing.JComboBox<>();
        jComboBox119 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));

        jButton3.setText("jButton3");

        jButton8.setText("jButton8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kort for dummis");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1100, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Kort Generator");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Velg navn ditt:");

        jButton1.setText("Tilfeldig kort");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Der finnes 169 forsjellige alternativ av tekst til kortet + en kan utvide antall muligheter hvis en har lyst");

        jLabel5.setText("Kortet vil blir laget på pcen frem til noen generer et nytt kort");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Programvaren er utviklet av: EH Enterprise");

        jComboBox1.setMaximumRowCount(10);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deepsea Stavanger", "Deepsea Bergen", "Deepsea Atlantic", "Deepsea Aberdeen", "Deepsea Metro 2", "Deepsea Metro 1", "Island Innovator" }));

        jLabel7.setText("Velg rigg du ønsker:");

        jLabel8.setText("Trykk på Generer tilfeldig kort får å lage kort:");

        jLabel9.setText("Velg antall dager fra og med i dag å frem over:");

        jComboBox2.setMaximumRowCount(15);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kun idag", "+1 dag frem i tid", "+2 dag frem i tid", "+3 dag frem i tid", "+4 dag frem i tid", "+5 dag frem i tid", "+6 dag frem i tid", "+7 dag frem i tid", "+8 dag frem i tid", "+9 dag frem i tid", "+10 dag frem i tid", "+11 dag frem i tid", "+12 dag frem i tid", "+13 dag frem i tid", "+14 dag frem i tid" }));

        jButton2.setText("Legg til navn");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Trykk på legg til navn får å kunne velge det");

        jLabel11.setText("Skriv inn naven for å legge det til:");

        jComboBox3.setMaximumRowCount(15);

        jLabel12.setText("Kortenes plasering er i mappen ferdig utfylte kort :-)");

        jLabel17.setText("Velg antall kort for samme dag:");

        jComboBox4.setMaximumRowCount(10);
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jButton4.setText("Tøm mappen for kort");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel18.setText("For å tømme mappen for kort trykk her:");

        jLabel19.setText("For å lage kort med valgt tekst: velg teksten og trykk på lag kort");

        jComboBox5.setMaximumRowCount(20);
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Velg teksten" }));

        jButton5.setText("Lag kort");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel20.setText("En kan kun lage et kort om gangen med valgt tekst med dagens dato");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("En kan også lage kort for et skift med 3 stykk");

        jComboBox68.setMaximumRowCount(15);

        jLabel14.setText("Person 1:");

        jLabel15.setText("Person 2:");

        jLabel16.setText("Person 3:");

        jComboBox78.setMaximumRowCount(15);

        jComboBox88.setMaximumRowCount(15);

        jComboBox99.setMaximumRowCount(15);
        jComboBox99.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Velg teksten" }));

        jComboBox109.setMaximumRowCount(15);
        jComboBox109.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Velg teksten" }));

        jComboBox119.setMaximumRowCount(15);
        jComboBox119.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Velg teksten" }));

        jButton6.setText("Lag tilfeldige kort for 3 personer");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Lag kort med valgt tekst for 3 personer");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hvis en ønsker å lage kun to kort med valgt tekst sett valget til Velg teksten på en av personene");

        jButton9.setText("Åpne mappen med kort");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel21.setText("Slette navn i fra listen som står skrevet i tekstfelte");

        jButton10.setText("Slett navn");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jLabel22.setText("Skriv inn her:");

        jLabel23.setText("For å skrive inn egne tekster for å kan en gjøre det her under. Grunnen for at det er delt opp i 4 er, for å få det til å passe på kortet per linje kan inneholde 31 symboler.");

        jButton11.setText("Lagre og legg til teksten");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel25.setText("Linje 1 på kortet:");

        jLabel26.setText("Linje 3 på kortet:");

        jLabel27.setText("Linje 4 på kortet:");

        jLabel28.setText("Linje 2 på kortet:");

        jLabel29.setText("Programmet er kvalitets testet av en kritisk uavhengkilde kilde for å gjøre programmet enklest og brukervendlig. Takk for hjelpen. ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jLabel24)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox2, 0, 1, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton10)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox88, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox78, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox68, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox109, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox99, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox119, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2))
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel21)
                                            .addComponent(jButton10))
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(19, 19, 19)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jButton1)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton5)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBox99, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jComboBox78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jComboBox88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox119, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jButton9)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))))
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel28)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(jLabel24)
                .addContainerGap())
        );

        jLabel6.getAccessibleContext().setAccessibleName("Program varen er utviklet av: EH Enterprise");
        jLabel6.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int width = 73;                 //bredde av bilde
        int height = 180;               //hoyde av bilde
        BufferedImage image = null;
        File f = null;
        textArea1.setText("");
        ClassLoader classLoder = getClass().getClassLoader();
        String a, b, c, addon;
        int tall1, tall2;

        tall2 = jComboBox2.getSelectedIndex() + 1;
        tall1 = jComboBox4.getSelectedIndex() + 1;

        //datoen til kortet må endere dato for skyving!!!
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Calendar calendar = new GregorianCalendar();

        for (int i = 0; i < tall2; i++) {

            //dato ending
            if (i == 0) {
                calendar.add(Calendar.DAY_OF_MONTH, i);
            } else {
                calendar.add(Calendar.DAY_OF_MONTH, 1);
            }
            for (int j = 0; j < tall1; j++) {

                //navn endring av file
                a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                b = ".jpg";
                c = a + (i + 1) + (j + 1) + b;
                //lesing av bilde
                try {

                    f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                    image = ImageIO.read(f);
                    System.out.println("Innlesing ok");
                } catch (Exception e) {
                    System.out.println("Feil: " + e);
                }

                // tilfeldig tekst til kortet
                int randomtall = (int) Math.floor(Math.random() * jComboBox5.getItemCount()) + 1;
                if (randomtall > 169) {
                    //finne en løsing
                    int la;
                    la = randomtall - 170;
                    la = la * 4;
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf.format(calendar.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(al.get(la).toString(), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(al.get(la + 1).toString(), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(al.get(la + 2).toString(), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(al.get(la + 3).toString(), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                } else {
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf.format(calendar.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(Text01(randomtall), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(Text02(randomtall), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(Text03(randomtall), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(Text04(randomtall), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        aList.add(jTextField2.getText());
        jComboBox3.addItem(jTextField2.getText());
        jComboBox68.addItem(jTextField2.getText());
        jComboBox78.addItem(jTextField2.getText());
        jComboBox88.addItem(jTextField2.getText());
        jTextField2.setText(" ");

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            textArea1.setText("");
            String path1, a, b;
            a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
            b = ".jpg";
            for (int i = 0; i < 166; i++) {

                path1 = a + i + b;
                Path path = Paths.get(path1);
                Files.deleteIfExists(path);
            }

        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       
        if (engang == 0) {
            
            String line, line1;

            try {
                BufferedReader input = new BufferedReader(new FileReader("D:\\Kortautotext\\src\\liste.txt"));
                if (!input.ready()) {
                    throw new IOException();
                }
                while ((line = input.readLine()) != null) {
                    aList.add(line);
                }
                input.close();
                BufferedReader read = new BufferedReader(new FileReader("D:\\Kortautotext\\src\\kort.txt"));
                while ((line1 = read.readLine()) != null) {
                    al.add(line1);
                }
                read.close();
            } catch (Exception e) {
                System.out.println(e);

            }

            aList.sort(Comparator.naturalOrder());

            for (int i = 0; i < aList.size(); i++) {
                jComboBox3.addItem(aList.get(i).toString());
                jComboBox68.addItem(aList.get(i).toString());
                jComboBox78.addItem(aList.get(i).toString());
                jComboBox88.addItem(aList.get(i).toString());
            }
            for (int i = 1; i < 170; i++) {
                jComboBox5.addItem(Text01(i) + Text02(i) + Text03(i) + Text04(i));
                jComboBox109.addItem(Text01(i) + Text02(i) + Text03(i) + Text04(i));
                jComboBox99.addItem(Text01(i) + Text02(i) + Text03(i) + Text04(i));
                jComboBox119.addItem(Text01(i) + Text02(i) + Text03(i) + Text04(i));

            }
            try {
                for (int i = 0; i < al.size(); i = i + 4) {
                    jComboBox5.addItem(al.get(i).toString() + " " + al.get(i + 1).toString() + " " + al.get(i + 2).toString() + " " + al.get(i + 3).toString());
                    jComboBox109.addItem(al.get(i).toString() + " " + al.get(i + 1).toString() + " " + al.get(i + 2).toString() + " " + al.get(i + 3).toString());
                    jComboBox99.addItem(al.get(i).toString() + " " + al.get(i + 1).toString() + " " + al.get(i + 2).toString() + " " + al.get(i + 3).toString());
                    jComboBox119.addItem(al.get(i).toString() + " " + al.get(i + 1).toString() + " " + al.get(i + 2).toString() + " " + al.get(i + 3).toString());
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            
            engang = 1;
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //skrive ut til dokument
        aList.sort(Comparator.naturalOrder());
        try {
            PrintStream fileStream = new PrintStream(new File("D:\\Kortautotext\\src\\liste.txt"));

            for (int i = 0; i < aList.size(); i++) {
                fileStream.println(aList.get(i).toString());
                fileStream.flush();
            }
            fileStream.close();

            PrintStream fs = new PrintStream(new File("D:\\Kortautotext\\src\\kort.txt"));
            for (int i = 0; i < al.size(); i++) {
                fs.println(al.get(i).toString());
                fs.flush();
            }
            fs.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (0 < jComboBox5.getSelectedIndex()) {

            int width = 73;                 //bredde av bilde
            int height = 180;               //hoyde av bilde
            BufferedImage image = null;
            File f = null;
            textArea1.setText("");
            ClassLoader classLoder = getClass().getClassLoader();
            String a, b, c, addon;

            //datoen til kortet må endere dato for skyving!!!
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Calendar calendar = new GregorianCalendar();

            for (int i = 0; i < 1; i++) {

                //dato ending
                if (i == 0) {
                    calendar.add(Calendar.DAY_OF_MONTH, i);
                } else {
                    calendar.add(Calendar.DAY_OF_MONTH, 1);
                }
                for (int j = 0; j < 1; j++) {

                    //navn endring av file
                    a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                    b = ".jpg";
                    c = a + (i + 1) + (j + 1) + b;
                    //lesing av bilde
                    try {

                        f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                        image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                        image = ImageIO.read(f);
                        System.out.println("Innlesing ok");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }

                    // tilfeldig tekst til kortet
                    int randomtall = jComboBox5.getSelectedIndex();
                    if (randomtall > 169) {
                        //finne en løsing
                        int la;
                        la = randomtall - 170;
                        la = la * 4;
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf.format(calendar.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(al.get(la).toString(), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(al.get(la + 1).toString(), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(al.get(la + 2).toString(), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(al.get(la + 3).toString(), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    } else {
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf.format(calendar.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(Text01(randomtall), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(Text02(randomtall), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(Text03(randomtall), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(Text04(randomtall), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    }
                }
            }
        } else {
            textArea1.append("Kort ");
            textArea1.append("ble ikke laget");
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here: //tilfeldige
        int width = 73;                 //bredde av bilde
        int height = 180;               //hoyde av bilde
        BufferedImage image = null;
        File f = null;
        textArea1.setText("");
        ClassLoader classLoder = getClass().getClassLoader();
        String a, b, c, addon;
        int tall1, tall2;
        int vk1 = 1;
        vk1=1;
        tall2 = jComboBox2.getSelectedIndex() + 1;
        tall1 = jComboBox4.getSelectedIndex() + 1;

        //datoen til kortet må endere dato for skyving!!!
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Calendar calendar = new GregorianCalendar();

        for (int i = 0; i < tall2; i++) {

            //dato ending
            if (i == 0) {
                calendar.add(Calendar.DAY_OF_MONTH, i);
            } else {
                calendar.add(Calendar.DAY_OF_MONTH, 1);
            }
            for (int j = 0; j < tall1; j++) {

                //navn endring av file
                a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                b = ".jpg";
                c = a + vk1 + b;
                vk1++;
                //lesing av bilde
                try {

                    f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                    image = ImageIO.read(f);
                    System.out.println("Innlesing ok");
                } catch (Exception e) {
                    System.out.println("Feil: " + e);
                }

                // tilfeldig tekst til kortet
                int randomtall = (int) Math.floor(Math.random() * jComboBox5.getItemCount()) + 1;
                if (randomtall > 169) {
                    //finne en løsing
                    int la;
                    la = randomtall - 170;
                    la = la * 4;
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf.format(calendar.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(al.get(la).toString(), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(al.get(la + 1).toString(), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(al.get(la + 2).toString(), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(al.get(la + 3).toString(), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                } else {
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf.format(calendar.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox68.getItemAt(jComboBox68.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(Text01(randomtall), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(Text02(randomtall), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(Text03(randomtall), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(Text04(randomtall), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                }
            }
        }
        //datoen til kortet må endere dato for skyving!!!
        SimpleDateFormat sdf2 = new SimpleDateFormat("dd.MM.yyyy");
        Calendar calendar2 = new GregorianCalendar();

        for (int i = 0; i < tall2; i++) {

            //dato ending
            if (i == 0) {
                calendar2.add(Calendar.DAY_OF_MONTH, i);
            } else {
                calendar2.add(Calendar.DAY_OF_MONTH, 1);
            }
            for (int j = 0; j < tall1; j++) {

                //navn endring av file
                a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                b = ".jpg";
                c = a + vk1 + b;
                vk1++;
                //lesing av bilde
                try {

                    f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                    image = ImageIO.read(f);
                    System.out.println("Innlesing ok");
                } catch (Exception e) {
                    System.out.println("Feil: " + e);
                }

                // tilfeldig tekst til kortet
                int randomtall = (int) Math.floor(Math.random() * jComboBox5.getItemCount()) + 1;
                if (randomtall > 169) {
                    //finne en løsing
                    int la;
                    la = randomtall - 170;
                    la = la * 4;
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf2.format(calendar2.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(al.get(la).toString(), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(al.get(la + 1).toString(), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(al.get(la + 2).toString(), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(al.get(la + 3).toString(), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf2.format(calendar2.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                } else {
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf2.format(calendar2.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox78.getItemAt(jComboBox78.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(Text01(randomtall), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(Text02(randomtall), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(Text03(randomtall), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(Text04(randomtall), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf2.format(calendar2.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                }
            }
        }
        //datoen til kortet må endere dato for skyving!!!
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd.MM.yyyy");
        Calendar calendar1 = new GregorianCalendar();

        for (int i = 0; i < tall2; i++) {

            //dato ending
            if (i == 0) {
                calendar1.add(Calendar.DAY_OF_MONTH, i);
            } else {
                calendar1.add(Calendar.DAY_OF_MONTH, 1);
            }
            for (int j = 0; j < tall1; j++) {

                //navn endring av file
                a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                b = ".jpg";
                c = a + vk1 + b;
                vk1++;
                //lesing av bilde
                try {

                    f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                    image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                    image = ImageIO.read(f);
                    System.out.println("Innlesing ok");
                } catch (Exception e) {
                    System.out.println("Feil: " + e);
                }

                // tilfeldig tekst til kortet
                int randomtall = (int) Math.floor(Math.random() * jComboBox5.getItemCount()) + 1;
                if (randomtall > 169) {
                    //finne en løsing
                    int la;
                    la = randomtall - 170;
                    la = la * 4;
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf1.format(calendar1.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(al.get(la).toString(), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(al.get(la + 1).toString(), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(al.get(la + 2).toString(), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(al.get(la + 3).toString(), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf1.format(calendar1.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                } else {
                    try {
                        //Plassering av text til kortet, samt statisk text.
                        Graphics g = image.getGraphics();
                        g.setColor(Color.black);
                        g.setFont(g.getFont().deriveFont(18f));
                        g.drawString(sdf1.format(calendar1.getTime()), 305, 165);
                        g.dispose();
                        Graphics g1 = image.getGraphics();
                        g1.setColor(Color.black);
                        g1.setFont(g.getFont().deriveFont(22f));
                        g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                        g1.dispose();
                        Graphics g2 = image.getGraphics();
                        g2.setColor(Color.black);
                        g2.setFont(g.getFont().deriveFont(28f));
                        g2.drawString("x", 22, 232);
                        g2.dispose();
                        Graphics g3 = image.getGraphics();
                        g3.setColor(Color.black);
                        g3.setFont(g.getFont().deriveFont(28f));
                        g3.drawString("x", 257, 815);
                        g3.dispose();
                        Graphics g4 = image.getGraphics();
                        g4.setColor(Color.black);
                        g4.setFont(g.getFont().deriveFont(22f));
                        g4.drawString("Oceaneering AS", 150, 915);
                        g4.dispose();
                        Graphics g5 = image.getGraphics();
                        g5.setColor(Color.black);
                        g5.setFont(g.getFont().deriveFont(22f));
                        g5.drawString(jComboBox88.getItemAt(jComboBox88.getSelectedIndex()), 150, 880);
                        g5.dispose();
                        Graphics g6 = image.getGraphics();
                        g6.setColor(Color.black);
                        g6.setFont(g.getFont().deriveFont(22f));
                        g6.drawString(Text01(randomtall), 15, 342);
                        g6.dispose();
                        Graphics g7 = image.getGraphics();
                        g7.setColor(Color.black);
                        g7.setFont(g.getFont().deriveFont(22f));
                        g7.drawString(Text02(randomtall), 15, 385);
                        g7.dispose();
                        Graphics g8 = image.getGraphics();
                        g8.setColor(Color.black);
                        g8.setFont(g.getFont().deriveFont(22f));
                        g8.drawString(Text03(randomtall), 15, 428);
                        g8.dispose();
                        Graphics g9 = image.getGraphics();
                        g9.setColor(Color.black);
                        g9.setFont(g.getFont().deriveFont(22f));
                        g9.drawString(Text04(randomtall), 15, 473);
                        g9.dispose();

                    } catch (Exception e) {
                        textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                    }
                    try {
                        addon = (j + 1) + " Dato " + sdf1.format(calendar1.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                        textArea1.append("Kort ");
                        textArea1.append(addon);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                    try {
                        f = new File(c);
                        ImageIO.write(image, "jpg", f);
                        System.out.println("Et nytt bilder er lagret");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int width = 73;                 //bredde av bilde
        int height = 180;               //hoyde av bilde
        BufferedImage image = null;
        File f = null;
        textArea1.setText("");
        ClassLoader classLoder = getClass().getClassLoader();
        String a, b, c, addon;
        int tall1 = 1, tall2 = 1;
        int vk1 = 1;
        int randomtall;

        if (0 < jComboBox99.getSelectedIndex()) {
            //datoen til kortet må endere dato for skyving!!!
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Calendar calendar = new GregorianCalendar();

            for (int i = 0; i < tall2; i++) {

                //dato ending
                if (i == 0) {
                    calendar.add(Calendar.DAY_OF_MONTH, i);
                } else {
                    calendar.add(Calendar.DAY_OF_MONTH, 1);
                }
                for (int j = 0; j < tall1; j++) {

                    //navn endring av file
                    a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                    b = ".jpg";
                    c = a + vk1 + b;
                    vk1++;
                    //lesing av bilde
                    try {

                        f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                        image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                        image = ImageIO.read(f);
                        System.out.println("Innlesing ok");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }

                    // tilfeldig tekst til kortet
                    randomtall = jComboBox99.getSelectedIndex();
                    if (randomtall > 169) {
                        //finne en løsing
                        int la;
                        la = randomtall - 170;
                        la = la * 4;
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf.format(calendar.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(al.get(la).toString(), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(al.get(la + 1).toString(), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(al.get(la + 2).toString(), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(al.get(la + 3).toString(), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    } else {
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf.format(calendar.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox68.getItemAt(jComboBox68.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(Text01(randomtall), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(Text02(randomtall), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(Text03(randomtall), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(Text04(randomtall), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf.format(calendar.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    }
                }
            }
        }
        if (0 < jComboBox109.getSelectedIndex()) {
            //datoen til kortet må endere dato for skyving!!!
            SimpleDateFormat sdf2 = new SimpleDateFormat("dd.MM.yyyy");
            Calendar calendar2 = new GregorianCalendar();

            for (int i = 0; i < tall2; i++) {

                //dato ending
                if (i == 0) {
                    calendar2.add(Calendar.DAY_OF_MONTH, i);
                } else {
                    calendar2.add(Calendar.DAY_OF_MONTH, 1);
                }
                for (int j = 0; j < tall1; j++) {

                    //navn endring av file
                    a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                    b = ".jpg";
                    c = a + vk1 + b;
                    vk1++;
                    //lesing av bilde
                    try {

                        f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                        image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                        image = ImageIO.read(f);
                        System.out.println("Innlesing ok");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }

                    // tilfeldig tekst til kortet
                    randomtall = jComboBox109.getSelectedIndex();
                    if (randomtall > 169) {
                        //finne en løsing
                        int la;
                        la = randomtall - 170;
                        la = la * 4;
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf2.format(calendar2.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(al.get(la).toString(), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(al.get(la + 1).toString(), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(al.get(la + 2).toString(), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(al.get(la + 3).toString(), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf2.format(calendar2.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    } else {
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf2.format(calendar2.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox78.getItemAt(jComboBox78.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(Text01(randomtall), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(Text02(randomtall), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(Text03(randomtall), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(Text04(randomtall), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf2.format(calendar2.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    }
                }
            }
        }
        if (0 < jComboBox119.getSelectedIndex()) {
            //datoen til kortet må endere dato for skyving!!!
            SimpleDateFormat sdf1 = new SimpleDateFormat("dd.MM.yyyy");
            Calendar calendar1 = new GregorianCalendar();

            for (int i = 0; i < tall2; i++) {

                //dato ending
                if (i == 0) {
                    calendar1.add(Calendar.DAY_OF_MONTH, i);
                } else {
                    calendar1.add(Calendar.DAY_OF_MONTH, 1);
                }
                for (int j = 0; j < tall1; j++) {

                    //navn endring av file
                    a = "D:\\Kortautotext\\FerdigUtFyltKort\\Scann";
                    b = ".jpg";
                    c = a + vk1 + b;
                    vk1++;
                    //lesing av bilde
                    try {

                        f = new File("D:\\Kortautotext\\src\\DR033.jpg"); //fil plassering
                        image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
                        image = ImageIO.read(f);
                        System.out.println("Innlesing ok");
                    } catch (Exception e) {
                        System.out.println("Feil: " + e);
                    }

                    // tilfeldig tekst til kortet
                    randomtall = jComboBox119.getSelectedIndex();
                    if (randomtall > 169) {
                        //finne en løsing
                        int la;
                        la = randomtall - 170;
                        la = la * 4;
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf1.format(calendar1.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox3.getItemAt(jComboBox3.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(al.get(la).toString(), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(al.get(la + 1).toString(), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(al.get(la + 2).toString(), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(al.get(la + 3).toString(), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf1.format(calendar1.getTime()) + ":\n" + al.get(la).toString() + " " + al.get(la + 1).toString() + " " + al.get(la + 2).toString() + " " + al.get(la + 3).toString() + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                            System.out.println("Et nytt bilder er lagret");
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    } else {
                        try {
                            //Plassering av text til kortet, samt statisk text.
                            Graphics g = image.getGraphics();
                            g.setColor(Color.black);
                            g.setFont(g.getFont().deriveFont(18f));
                            g.drawString(sdf1.format(calendar1.getTime()), 305, 165);
                            g.dispose();
                            Graphics g1 = image.getGraphics();
                            g1.setColor(Color.black);
                            g1.setFont(g.getFont().deriveFont(22f));
                            g1.drawString(jComboBox1.getItemAt(jComboBox1.getSelectedIndex()), 100, 195);
                            g1.dispose();
                            Graphics g2 = image.getGraphics();
                            g2.setColor(Color.black);
                            g2.setFont(g.getFont().deriveFont(28f));
                            g2.drawString("x", 22, 232);
                            g2.dispose();
                            Graphics g3 = image.getGraphics();
                            g3.setColor(Color.black);
                            g3.setFont(g.getFont().deriveFont(28f));
                            g3.drawString("x", 257, 815);
                            g3.dispose();
                            Graphics g4 = image.getGraphics();
                            g4.setColor(Color.black);
                            g4.setFont(g.getFont().deriveFont(22f));
                            g4.drawString("Oceaneering AS", 150, 915);
                            g4.dispose();
                            Graphics g5 = image.getGraphics();
                            g5.setColor(Color.black);
                            g5.setFont(g.getFont().deriveFont(22f));
                            g5.drawString(jComboBox88.getItemAt(jComboBox88.getSelectedIndex()), 150, 880);
                            g5.dispose();
                            Graphics g6 = image.getGraphics();
                            g6.setColor(Color.black);
                            g6.setFont(g.getFont().deriveFont(22f));
                            g6.drawString(Text01(randomtall), 15, 342);
                            g6.dispose();
                            Graphics g7 = image.getGraphics();
                            g7.setColor(Color.black);
                            g7.setFont(g.getFont().deriveFont(22f));
                            g7.drawString(Text02(randomtall), 15, 385);
                            g7.dispose();
                            Graphics g8 = image.getGraphics();
                            g8.setColor(Color.black);
                            g8.setFont(g.getFont().deriveFont(22f));
                            g8.drawString(Text03(randomtall), 15, 428);
                            g8.dispose();
                            Graphics g9 = image.getGraphics();
                            g9.setColor(Color.black);
                            g9.setFont(g.getFont().deriveFont(22f));
                            g9.drawString(Text04(randomtall), 15, 473);
                            g9.dispose();

                        } catch (Exception e) {
                            textArea1.append("Kortet ble ikke utfylt pga manglende navn! \nTeksten som hadde blitt lagt på var følgende: \n");
                        }
                        try {
                            addon = (j + 1) + " Dato " + sdf1.format(calendar1.getTime()) + ":\n" + Text01(randomtall) + Text02(randomtall) + Text03(randomtall) + Text04(randomtall) + "\n";
                            textArea1.append("Kort ");
                            textArea1.append(addon);
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                        try {
                            f = new File(c);
                            ImageIO.write(image, "jpg", f);
                        } catch (Exception e) {
                            System.out.println("Feil: " + e);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        // opne mappe        
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {
            dirToOpen = new File("D:\\Kortautotext\\FerdigUtFyltKort");
            desktop.open(dirToOpen);
        } catch (IllegalArgumentException iae) {
            System.out.println("File Not Found");
        } catch (IOException ex) {
            Logger.getLogger(Vising.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String navn = jTextField2.getText();
        try {
            for (int i = 0; i < aList.size(); i++) {

                if (navn.equalsIgnoreCase(aList.get(i).toString())) {
                    System.out.println(" ja");
                    aList.remove(i);
                    jComboBox3.removeItemAt(i);
                    jComboBox68.removeItemAt(i);
                    jComboBox78.removeItemAt(i);
                    jComboBox88.removeItemAt(i);
                    break;
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        if (jTextField1.getText().length() > 32) // limit textfield to 3 characters
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // TODO add your handling code here:
        if (jTextField3.getText().length() >32) // limit textfield to 3 characters
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // TODO add your handling code here:
        if (jTextField4.getText().length() >32) // limit textfield to 3 characters
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
        if (jTextField5.getText().length() >32) // limit textfield to 3 characters
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String t1, t2, t3, t4;
        t1 = jTextField1.getText();
        t2 = jTextField3.getText();
        t3 = jTextField4.getText();
        t4 = jTextField5.getText();
        jComboBox5.addItem(t1 + t2 + t3 + t4);
        jComboBox109.addItem(t1 + t2 + t3 + t4);
        jComboBox99.addItem(t1 + t2 + t3 + t4);
        jComboBox119.addItem(t1 + t2 + t3 + t4);
        al.add(t1);
        al.add(t2);
        al.add(t3);
        al.add(t4);
        jTextField1.setText(" ");
        jTextField3.setText(" ");
        jTextField4.setText(" ");
        jTextField5.setText(" ");

    }//GEN-LAST:event_jButton11ActionPerformed

    private static String Text01(int tall) {
        String a;
        switch (tall) {
            case 1:
                a = "Takker for god mat i messen";
                break;
            case 2:
                a = "God handover";
                break;
            case 3:
                a = "Godt samarbeid mellom avdelinge";
                break;
            case 4:
                a = "Inspiserte og ryddet ROV omåradet";
                break;
            case 5:
                a = "Informativt og bra gjennomført";
                break;
            case 6:
                a = "Bra gjennomføring av sjøsikring";
                break;
            case 7:
                a = "Godt renhold i ROV kontrollrom";
                break;
            case 8:
                a = "God komunikkasjon over radioen";
                break;
            case 9:
                a = "Bra med repetativ meldinger over";
                break;
            case 10:
                a = "Vasket ROV området. Viktig med";
                break;
            case 11:
                a = "Gjennom førte tilsyn av sjøsikkringen.";
                break;
            case 12:
                a = "Godt arbeidsmilijø og trivelig folk.";
                break;
            case 13:
                a = "PDO sjekk av ROV kontrollrom. ";
                break;
            case 14:
                a = "PDO sjekk av ROV hangar. ";
                break;
            case 15:
                a = "PDO sjekk av ROV område. ";
                break;
            case 16:
                a = "PDO sjekk av ROV'en før launch. ";
                break;
            case 17:
                a = "PDO sjekk av ROV-systemet sin ";
                break;
            case 18:
                a = "PDO sjekk av ROV-systemet sin ";
                break;
            case 19:
                a = "PDO sjekk av ROV winchen. ";
                break;
            case 20:
                a = "Ble brukt riktig PPE av en ";
                break;
            case 21:
                a = "Korrekt bruk av PPE under ";
                break;
            case 22:
                a = "Korrekt bruk av PPE under ";
                break;
            case 23:
                a = "Korrekt bruk av PPE under ";
                break;
            case 24:
                a = "Korrekt bruk av PPE under";
                break;
            case 25:
                a = "Korrekt bruk av PPE under";
                break;
            case 26:
                a = "God komunikasjon mellom crewet";
                break;
            case 27:
                a = "God komunikasjon mellom crewet";
                break;
            case 28:
                a = "Sikker gjennomføring av ";
                break;
            case 29:
                a = "Sikker gjennomføring av ";
                break;
            case 30:
                a = "Veldig god gjennomføring ";
                break;
            case 31:
                a = "Veldig god gjennomføring ";
                break;
            case 32:
                a = "Veldig god gjennomgang av Launch ";
                break;
            case 33:
                a = "Veldig god gjennomgang av Recover";
                break;
            case 34:
                a = "God radiokommunikasjon under ";
                break;
            case 35:
                a = "God radiokommunikasjon under ";
                break;
            case 36:
                a = "Foretok inspeksjon av ROV ";
                break;
            case 37:
                a = "Foretok inspeksjon av TMS ";
                break;
            case 38:
                a = "Foretok inspeksjon av Pilotstolen";
                break;
            case 39:
                a = "Foretok inspeksjon av Videologgeren ";
                break;
            case 40:
                a = "Foretok inspeksjon av Sonaren ";
                break;
            case 41:
                a = "Foretok inspeksjon av Winchen ";
                break;
            case 42:
                a = "Foretok inspeksjon av Sonaren ";
                break;
            case 43:
                a = "God radiokommunikasjon mellom ";
                break;
            case 44:
                a = "God radiokommunikasjon mellom ";
                break;
            case 45:
                a = "God radiokommunikasjon mellom ";
                break;
            case 46:
                a = "God radiokommunikasjon mellom";
                break;
            case 47:
                a = "God radiokommunikasjon mellom ";
                break;
            case 48:
                a = "God radiokommunikasjon mellom";
                break;
            case 49:
                a = "God kommunikasjon mellom ";
                break;
            case 50:
                a = "God kommunikasjon mellom ";
                break;
            case 51:
                a = "God kommunikasjon mellom ";
                break;
            case 52:
                a = "Ble brukt riktig PPE under";
                break;
            case 53:
                a = "Ble brukt riktig PPE under";
                break;
            case 54:
                a = "Ble brukt riktig PPE under";
                break;
            case 55:
                a = "Ble brukt riktig PPE under";
                break;
            case 56:
                a = "Ble brukt riktig PPE under";
                break;
            case 57:
                a = "Ble brukt riktig PPE under";
                break;
            case 58:
                a = "Ble brukt riktig PPE under";
                break;
            case 59:
                a = "Ble brukt riktig PPE under";
                break;
            case 60:
                a = "Ble brukt riktig PPE under";
                break;
            case 61:
                a = "Ble brukt riktig verktøy under";
                break;
            case 62:
                a = "Ble brukt riktig verktøy under";
                break;
            case 63:
                a = "Ble brukt riktig verktøy under";
                break;
            case 64:
                a = "Ble brukt riktig verktøy under";
                break;
            case 65:
                a = "Ble brukt riktig verktøy under";
                break;
            case 66:
                a = "Ble brukt riktig verktøy under";
                break;
            case 67:
                a = "Ble brukt riktig verktøy under";
                break;
            case 68:
                a = "Ble brukt riktig verktøy under";
                break;
            case 69:
                a = "Ble brukt riktig verktøy under";
                break;
            case 70:
                a = "God sikkerhets informasjon";
                break;
            case 71:
                a = "Observerte kollega sjekke gjennom ";
                break;
            case 72:
                a = "Kollega observerte skrot på dekk,";
                break;
            case 73:
                a = "Observerte kollega iføre seg korrekte ";
                break;
            case 74:
                a = "I forbindelse med vedlikehold på ROV ";
                break;
            case 75:
                a = "Sjekket gjennom søppelet for korrekt ";
                break;
            case 76:
                a = "Jeg observerte skrot på dekk, tok ";
                break;
            case 77:
                a = "Observerte kollega iføre seg korrekte";
                break;
            case 78:
                a = "Observerte kollega bruke hansker";
                break;
            case 79:
                a = "Inspiserte løfteutstyr før bruk. ";
                break;
            case 80:
                a = "Inspiserte klatreutstyr før bruk.";
                break;
            case 81:
                a = "Inspiserte løfte kable før bruk.";
                break;
            case 82:
                a = "Inspiserte Winchen før bruk.  ";
                break;
            case 83:
                a = "Inspiserte ROV’en før bruk.  ";
                break;
            case 84:
                a = "Inspiserte TMS’en før bruk.  ";
                break;
            case 85:
                a = "Inspiserte Tehteren før bruk.  ";
                break;
            case 86:
                a = "Inspiserte Umbilcalen før bruk.";
                break;
            case 87:
                a = "Inspiserte løfteutstyr etter bruk.";
                break;
            case 88:
                a = "Inspiserte klatreutstyr etter bruk.";
                break;
            case 89:
                a = "Inspiserte løfte kable etter bruk.";
                break;
            case 90:
                a = "Inspiserte Winchen etter bruk.  ";
                break;
            case 91:
                a = "Inspiserte ROV’en etter bruk.  ";
                break;
            case 92:
                a = "Inspiserte TMS’en etter bruk.  ";
                break;
            case 93:
                a = "Inspiserte Tehteren etter bruk.";
                break;
            case 94:
                a = "Inspiserte Umbilcalen etter bruk.";
                break;
            case 95:
                a = "Observerte kollega sjekke";
                break;
            case 96:
                a = "Observerte kollega sjekke";
                break;
            case 97:
                a = "Observerte kollega sjekke";
                break;
            case 98:
                a = "Observerte kollega sjekke";
                break;
            case 99:
                a = "Observerte kollega sjekke";
                break;
            case 100:
                a = "Observerte kollega sjekke";
                break;
            case 101:
                a = "Observerte kollega sjekke";
                break;
            case 102:
                a = "Observerte kollega sjekke";
                break;
            case 103:
                a = "Observerte kollega sjekke";
                break;
            case 104:
                a = "Observerte kollega sjekke";
                break;
            case 105:
                a = "Observerte kollega sjekke";
                break;
            case 106:
                a = "Observerte kollega sjekke";
                break;
            case 107:
                a = "Observerte kollega sjekke";
                break;
            case 108:
                a = "Observerte kollega sjekke";
                break;
            case 109:
                a = "Observerte kollega sjekke";
                break;
            case 110:
                a = "Observerte kollega sjekke";
                break;
            case 111:
                a = "Bra utvalg av røyk i slappen ";
                break;
            case 112:
                a = "Bra utvalg av snus i slappen ";
                break;
            case 113:
                a = "Bra utvalg av smågodt i slappen ";
                break;
            case 114:
                a = "Bra utvalg av chips i slappen ";
                break;
            case 115:
                a = "Bra utvalg av toalettsaker i slappen";
                break;
            case 116:
                a = "Kollega hjelp og så til at";
                break;
            case 117:
                a = "Hjelp kollega og så til at ";
                break;
            case 118:
                a = "Fant blåsokk på dekk, plukket den";
                break;
            case 119:
                a = "Kollega fant blåsokk på dekk, ";
                break;
            case 120:
                a = "Fant blåsokk på drillfloore,";
                break;
            case 121:
                a = "Kollega fant blåsokk på drillfloore,";
                break;
            case 122:
                a = "Fant blåsokk i ROV-hangar, ";
                break;
            case 123:
                a = "Kollega fant blåsokk i ROV-hangar, ";
                break;
            case 124:
                a = "Fant blåsokk i ROV-workshop,";
                break;
            case 125:
                a = "Kollega fant blåsokk i ROV-";
                break;
            case 126:
                a = "Fant blåsokk i ROV-område, ";
                break;
            case 127:
                a = "Kollega fant blåsokk i ROV-område,";
                break;
            case 128:
                a = "Fant blåsokk i ROV-kontrollrom,";
                break;
            case 129:
                a = "Kollega fant blåsokk i ROV-";
                break;
            case 130:
                a = "Fant blåsokk i ROV-winchen,";
                break;
            case 131:
                a = "Kollega fant blåsokk i ROV-";
                break;
            case 132:
                a = "Observerte kollega sortere";
                break;
            case 133:
                a = "Observerte kollega rydde i ";
                break;
            case 134:
                a = "Gjennomførte rutine kontroll";
                break;
            case 135:
                a = "Kollega gjennomførte rutine ";
                break;
            case 136:
                a = "På mindet kollega å huske å ";
                break;
            case 137:
                a = "Påmindet kollega å huske å ";
                break;
            case 138:
                a = "Kollega påmindet meg å huske å ";
                break;
            case 139:
                a = "Kollega påmindet meg å huske å ";
                break;
            case 140:
                a = "Ass. derrick man var proaktiv, spurte ";
                break;
            case 141:
                a = "Bra planlegging / toolbox talk før ";
                break;
            case 142:
                a = "Det er tydelig et problem å få kastet ";
                break;
            case 143:
                a = "Det har vært noe feil sortering av ";
                break;
            case 144:
                a = "I forbindelsen handerover ble tatt opp";
                break;
            case 145:
                a = "Fant blåsokk på dekk. ";
                break;
            case 146:
                a = "Gjennomgang av recovery-prossedyre ";
                break;
            case 147:
                a = "God gjennomgang av Launch og ";
                break;
            case 148:
                a = "God handover / mottak av nye ";
                break;
            case 149:
                a = "God handover mellom dag/natt ";
                break;
            case 150:
                a = "God handover mellom natt/dag skiftet.";
                break;
            case 151:
                a = "God handover mellom skift i ";
                break;
            case 152:
                a = "God kommunikasjon mellom winch ";
                break;
            case 153:
                a = "Hadde en PDO sjekk i rov området ";
                break;
            case 154:
                a = "Juster dybden på ROV / TMS slik at ";
                break;
            case 155:
                a = "Kollega ryddet i overfyllt søplekasse. ";
                break;
            case 156:
                a = "Oberverte kollega bruke korrekt PPE ";
                break;
            case 157:
                a = "Observert kollega aktivisere tran-";
                break;
            case 158:
                a = "Observerte kollega finne filler slengt i ";
                break;
            case 159:
                a = "Observerte kollega plukke opp søppel ";
                break;
            case 160:
                a = "Observerte kollega rydde / sjekke ";
                break;
            case 161:
                a = "Observerte kollega sjekke gjennom ";
                break;
            case 162:
                a = "Observerte kollega ta på seg korrekt ";
                break;
            case 163:
                a = "Observete at kolega brukte korrekt ";
                break;
            case 164:
                a = "PDO sjekk av rov hangar. Så reint og";
                break;
            case 165:
                a = "PDO sjekk på ROV winch. Alt OK.";
                break;
            case 166:
                a = "Ryddet i hangar, alltid viktigt ";
                break;
            case 167:
                a = "Sjekket sortering på avfallstasjonene. ";
                break;
            case 168:
                a = "Tok en runde på dekk og sjekket ";
                break;
            case 169:
                a = "Utførte PDO på TMS etter utført ";
                break;
            case 170:
                a = "";
                break;
            case 171:
                a = "";
                break;
            case 172:
                a = "";
                break;
            default:
                a = "";
                break;
        }
        return a;
    }

    private static String Text02(int tall) {
        String a;
        switch (tall) {
            case 1:
                a = "";
                break;
            case 2:
                a = "";
                break;
            case 3:
                a = "";
                break;
            case 4:
                a = "";
                break;
            case 5:
                a = "sikkerhetsmøte";
                break;
            case 6:
                a = "av ROV området";
                break;
            case 7:
                a = "";
                break;
            case 8:
                a = "";
                break;
            case 9:
                a = "radioen";
                break;
            case 10:
                a = "godt renhold";
                break;
            case 11:
                a = "Alt var skikkelig sjøsikkeret";
                break;
            case 12:
                a = "Alt i velstående tilstand";
                break;
            case 13:
                a = "Alt i sikker tilstand";
                break;
            case 14:
                a = "Alt i sikker tilstand";
                break;
            case 15:
                a = "Alt i sikker tilstand";
                break;
            case 16:
                a = "Alt i sikker tilstand";
                break;
            case 17:
                a = "TMS'en før launch. Alt ok";
                break;
            case 18:
                a = "før launch. Alt ok";
                break;
            case 19:
                a = "Alt i sikker tilstand";
                break;
            case 20:
                a = "person som bruke høytrykkspyler";
                break;
            case 21:
                a = "vasking av ROV-Hangar";
                break;
            case 22:
                a = "vasking av ROV'en";
                break;
            case 23:
                a = "vasking av ROV kontrollrom";
                break;
            case 24:
                a = "vasking av ROV winchen";
                break;
            case 25:
                a = "vasking av ROV område";
                break;
            case 26:
                a = "ved Launch av ROV'en";
                break;
            case 27:
                a = "ved Recover av ROV'en";
                break;
            case 28:
                a = "Launch av ROV";
                break;
            case 29:
                a = "Recover av ROV";
                break;
            case 30:
                a = "av pre-dive prosedyren";
                break;
            case 31:
                a = "av post-dive prosedyren";
                break;
            case 32:
                a = "prosedyren før Launching av ROV'en";
                break;
            case 33:
                a = "prosedyren før Recovering av ROV'en";
                break;
            case 34:
                a = "operasjon";
                break;
            case 35:
                a = "vedlikehold";
                break;
            case 36:
                a = "før operasjon. Alt i orden";
                break;
            case 37:
                a = "før operasjon. Alt i orden";
                break;
            case 38:
                a = "før operasjon. Alt i orden";
                break;
            case 39:
                a = "før operasjon. Alt i orden";
                break;
            case 40:
                a = "før operasjon. Alt i orden";
                break;
            case 41:
                a = "før operasjon. Alt i orden";
                break;
            case 42:
                a = "før operasjon. Alt i orden";
                break;
            case 43:
                a = "ROV og Cellerdeck";
                break;
            case 44:
                a = "ROV og Deck";
                break;
            case 45:
                a = "ROV og Drilling";
                break;
            case 46:
                a = "ROV og FMC";
                break;
            case 47:
                a = "ROV og Sementer";
                break;
            case 48:
                a = "ROV og Boredeck";
                break;
            case 49:
                a = "ROV-pilot og CO-pilot";
                break;
            case 50:
                a = "ROV-pilot og Supervisor";
                break;
            case 51:
                a = "CO-pilot og Supervisor";
                break;
            case 52:
                a = "vedlikehold av ROV";
                break;
            case 53:
                a = "vedlikehold av TMS'en";
                break;
            case 54:
                a = "vedlikehold av winchen";
                break;
            case 55:
                a = "vedlikehold av hangaren";
                break;
            case 56:
                a = "vedlikehold av kontrollromet";
                break;
            case 57:
                a = "vedlikehold av umbilicalen";
                break;
            case 58:
                a = "vedlikehold av sonaren";
                break;
            case 59:
                a = "vedlikehold av T4'en";
                break;
            case 60:
                a = "vedlikehold av Rigmasteren";
                break;
            case 61:
                a = "vedlikehold av Rigmasteren";
                break;
            case 62:
                a = "vedlikehold av T4'en";
                break;
            case 63:
                a = "vedlikehold av sonaren";
                break;
            case 64:
                a = "vedlikehold av umbilicalen";
                break;
            case 65:
                a = "vedlikehold av kontrollromet";
                break;
            case 66:
                a = "vedlikehold av hangaren";
                break;
            case 67:
                a = "vedlikehold av winchen";
                break;
            case 68:
                a = "vedlikehold av TMS'en";
                break;
            case 69:
                a = "vedlikehold av ROV";
                break;
            case 70:
                a = "ombord på riggen";
                break;
            case 71:
                a = "søpplesekk for å verifisere korrekt";
            case 72:
                a = "tok det med seg og kildesorterte";
                break;
            case 73:
                a = "hansker etc før han skulle håndtere ";
                break;
            case 74:
                a = "var det fare for oljedrypp. Kollega ";
                break;
            case 75:
                a = "segmentering før jeg kastet det i";
                break;
            case 76:
                a = "det med meg og kildesorterte det";
                break;
            case 77:
                a = "PPE før han skulle håndtere";
                break;
            case 78:
                a = "på dekk i henhold til nytt";
                break;
            case 79:
                a = "Alt i orden.";
                break;
            case 80:
                a = "Alt i orden.";
                break;
            case 81:
                a = "Alt i orden.";
                break;
            case 82:
                a = "Alt i orden.";
                break;
            case 83:
                a = "Alt i orden.";
                break;
            case 84:
                a = "Alt i orden.";
                break;
            case 85:
                a = "Alt i orden.";
                break;
            case 86:
                a = "Alt i orden.";
                break;
            case 87:
                a = "Alt i orden.";
                break;
            case 88:
                a = "Alt i orden.";
                break;
            case 89:
                a = "Alt i orden.";
                break;
            case 90:
                a = "Alt i orden.";
                break;
            case 91:
                a = "Alt i orden.";
                break;
            case 92:
                a = "Alt i orden.";
                break;
            case 93:
                a = "Alt i orden.";
                break;
            case 94:
                a = "Alt i orden.";
                break;
            case 95:
                a = "løfteutstyr før det ble brukt.";
                break;
            case 96:
                a = "klatreutstyr før det ble brukt.";
                break;
            case 97:
                a = "løfte kable før den ble brukt.";
                break;
            case 98:
                a = "Winchen før det ble brukt.";
                break;
            case 99:
                a = "ROV’en før det ble brukt.";
                break;
            case 100:
                a = "TMS’en før det ble brukt";
                break;
            case 101:
                a = "Tehteren før det ble brukt";
                break;
            case 102:
                a = "Umbilcalen før det ble brukt";
                break;
            case 103:
                a = "løfteutstyr etter bruk.";
                break;
            case 104:
                a = "klatreutstyr etter bruk. ";
                break;
            case 105:
                a = "løfte kable etter bruk.";
                break;
            case 106:
                a = "Winchen etter bruk.";
                break;
            case 107:
                a = "ROV’en etter bruk. ";
                break;
            case 108:
                a = "TMS’en etter bruk.  ";
                break;
            case 109:
                a = "Tehteren etter bruk.";
                break;
            case 110:
                a = "Umbilcalen etter bruk.  ";
                break;
            case 111:
                a = "for den som trenger det.";
                break;
            case 112:
                a = "for den som trenger det.";
                break;
            case 113:
                a = "for den som trenger det.";
                break;
            case 114:
                a = "for den som trenger det.";
                break;
            case 115:
                a = "for den som trenger det.";
                break;
            case 116:
                a = "klatreselen min var korrekt påtatt, ";
                break;
            case 117:
                a = "klatreselen hans var korrekt påtatt, ";
                break;
            case 118:
                a = "opp og kastet den i rett søppeldunk.";
                break;
            case 119:
                a = "plukket den opp og kastet ";
                break;
            case 120:
                a = "plukket den opp og kastet ";
                break;
            case 121:
                a = "plukket den opp og kastet ";
                break;
            case 122:
                a = "plukket den opp og kastet ";
                break;
            case 123:
                a = "plukket den opp og kastet ";
                break;
            case 124:
                a = "plukket den opp og kastet ";
                break;
            case 125:
                a = "workshop, plukket den opp og";
                break;
            case 126:
                a = "plukket den opp og kastet";
                break;
            case 127:
                a = "plukket den opp og kastet";
                break;
            case 128:
                a = "plukket den opp og kastet ";
                break;
            case 129:
                a = "kontrollrom, plukket den opp og ";
                break;
            case 130:
                a = "plukket den opp og kastet";
                break;
            case 131:
                a = "winchen, plukket den opp og ";
                break;
            case 132:
                a = "søppel i kaffesjappa.";
                break;
            case 133:
                a = "kaffesjappa. Meget bra!";
                break;
            case 134:
                a = "på klatreutstyr for å forsikre at";
                break;
            case 135:
                a = "kontroll på klatreutstyr for å ";
                break;
            case 136:
                a = "ta av brille og ta på vernebrillene.";
                break;
            case 137:
                a = "å slå på radien sin før han gikk";
                break;
            case 138:
                a = "ta av brilleen og ta på vernebrillene.";
                break;
            case 139:
                a = "å slå på radien min før jeg gikk";
                break;
            case 140:
                a = "om vi trang lightsticks montert på";
            case 141:
                a = "launch og recovery av rov, der alles ";
                break;
            case 142:
                a = "drikkeflaskene etter seg, rundt om på";
                break;
            case 143:
                a = "søppel i ROV området den siste tiden.";
                break;
            case 144:
                a = "reglerne for sortering av søppel.";
                break;
            case 145:
                a = "Ryddet opp og kastet den.";
                break;
            case 146:
                a = "før vi tok ROV på dekk.";
                break;
            case 147:
                a = "Recovery av Rov. ";
                break;
            case 148:
                a = "kollegaer ii forbindelse med ";
                break;
            case 149:
                a = "i forbindelse med testing av Rov tooling.";
                break;
            case 150:
                a = "";
                break;
            case 151:
                a = "forbindelse med crewchange";
                break;
            case 152:
                a = "operatør, ROV controll og ";
                break;
            case 153:
                a = "og en gjennomgang av sjøsikring ";
                break;
            case 154:
                a = "stresspunkt på umbilical blir flyttet.";
                break;
            case 155:
                a = "Gav posetiv tilbakemelding.";
                break;
            case 156:
                a = "ved montering av HP jet på ROV ";
                break;
            case 157:
                a = "sponder til Rov. Han holdt den på siden";
                break;
            case 158:
                a = "en krok utenfor container. Han plukket ";
                break;
            case 159:
                a = "på dekk og legge det i riktig avfalls ";
                break;
            case 160:
                a = "sortering før han kastet søplesekk. ";
                break;
            case 161:
                a = "restavfall før levering, for å være";
                break;
            case 162:
                a = "PPU før håntering av hydrolikkolje";
                break;
            case 163:
                a = "PPE ved vedlikehold i ROV hangar ";
                break;
            case 164:
                a = "ryddig ut ingen funn ble gjort ";
                break;
            case 165:
                a = "";
                break;
            case 166:
                a = "og rydde etter endt jobb";
                break;
            case 167:
                a = "alt riktig sortert og ingen dunker ";
                break;
            case 168:
                a = "sperringer. Så bra ut, sperringer på plass ";
                break;
            case 169:
                a = "vedlikehold. Ingen funn, alt i god";
                break;
            case 170:
                a = "";
                break;
            case 171:
                a = "";
                break;
            case 172:
                a = "";
                break;

            default:
                a = "";
                break;
        }
        return a;
    }

    private static String Text03(int tall) {
        String a;
        switch (tall) {
            case 71:
                a = "sortert før han leverte i container.";
                break;
            case 73:
                a = "hydraulikkolje";
                break;
            case 74:
                a = "fant frem korrekt utstyr for oppsamling";
                break;
            case 75:
                a = "rett container";
                break;
            case 76:
                a = "";
                break;
            case 77:
                a = "hydraulikkolje";
                break;
            case 78:
                a = "regelverk";
                break;
            case 79:
                a = "";
                break;
            case 80:
                a = "";
                break;
            case 81:
                a = "";
                break;
            case 82:
                a = "";
                break;
            case 83:
                a = "";
                break;
            case 84:
                a = "";
                break;
            case 85:
                a = "";
                break;
            case 86:
                a = "";
                break;
            case 87:
                a = "";
                break;
            case 88:
                a = "";
                break;
            case 89:
                a = "";
                break;
            case 90:
                a = "";
                break;
            case 91:
                a = "";
                break;
            case 92:
                a = "";
                break;
            case 93:
                a = "";
                break;
            case 94:
                a = "";
                break;
            case 95:
                a = "Alt i orden.";
                break;
            case 96:
                a = "Alt i orden.";
                break;
            case 97:
                a = "Alt i orden.";
                break;
            case 98:
                a = "Alt i orden.";
                break;
            case 99:
                a = "Alt i orden.";
                break;
            case 100:
                a = "Alt i orden.";
                break;
            case 101:
                a = "Alt i orden.";
                break;
            case 102:
                a = "Alt i orden.";
                break;
            case 103:
                a = "Alt i orden.";
                break;
            case 104:
                a = "Alt i orden.";
                break;
            case 105:
                a = "Alt i orden.";
                break;
            case 106:
                a = "Alt i orden.";
                break;
            case 107:
                a = "Alt i orden.";
                break;
            case 108:
                a = "Alt i orden.";
                break;
            case 109:
                a = "Alt i orden.";
                break;
            case 110:
                a = "Alt i orden.";
                break;
            case 111:
                a = "";
                break;
            case 112:
                a = "";
                break;
            case 113:
                a = "";
                break;
            case 114:
                a = "";
                break;
            case 115:
                a = "";
                break;
            case 116:
                a = "før klatring  ";
                break;
            case 117:
                a = "før klatring  ";
                break;
            case 118:
                a = "";
                break;
            case 119:
                a = "den i rett søppeldunk.";
                break;
            case 120:
                a = "den i rett søppeldunk.";
                break;
            case 121:
                a = "den i rett søppeldunk.";
                break;
            case 122:
                a = "den i rett søppeldunk.";
                break;
            case 123:
                a = "den i rett søppeldunk.";
                break;
            case 124:
                a = "den i rett søppeldunk.";
                break;
            case 125:
                a = "kastet den i rett søppeldunk.";
                break;
            case 126:
                a = "den i rett søppeldunk.";
                break;
            case 127:
                a = "den i rett søppeldunk.";
                break;
            case 128:
                a = "den i rett søppeldunk.";
                break;
            case 129:
                a = "kastet den i rett søppeldunk.";
                break;
            case 130:
                a = "den i rett søppeldunk.";
                break;
            case 131:
                a = "kastet den i rett søppeldunk.";
                break;
            case 132:
                a = "Veldig bra tiltak!";
                break;
            case 133:
                a = "";
                break;
            case 134:
                a = "det var i god tilstand";
                break;
            case 135:
                a = "forsikre at det var i god tilstand";
                break;
            case 136:
                a = "Han satte pris på det";
                break;
            case 137:
                a = "ut av skifterommet";
                break;
            case 138:
                a = "Dette satte jeg pris på.";
                break;
            case 139:
                a = "ut av skifterommet";
                break;
            case 140:
                a = "guidewire før de gikk i havet. ";
                break;
            case 141:
                a = "arbeidsoppgaver ble gjennomgått.";
                break;
            case 142:
                a = "riggen.";
                break;
            case 143:
                a = "Men nå er det ryddet opp i :-)";
                break;
            case 144:
                a = "Slik at alle vet hvordan skal.";
                break;
            case 145:
                a = "";
                break;
            case 146:
                a = "";
                break;
            case 147:
                a = "God opplæring av Rov Supervisor.";
                break;
            case 148:
                a = "opplæring Rov.";
                break;
            case 149:
                a = "";
                break;
            case 150:
                a = "";
                break;
            case 151:
                a = " / snuing fra natt til dag.";
                break;
            case 152:
                a = "observatør under ROV recovery";
                break;
            case 153:
                a = "på eget utstyr. Ingenting funnet.";
                break;
            case 154:
                a = "";
                break;
            case 155:
                a = "";
                break;
            case 156:
                a = "";
                break;
            case 157:
                a = "når den ble slått på. Helt etter boka.";
                break;
            case 158:
                a = "opp og kastet i korrekt sortering.";
                break;
            case 159:
                a = "sortering.";
                break;
            case 160:
                a = "Gav positiv tilbakemelding";
                break;
            case 161:
                a = "sikker på at sortering var fulgt.";
                break;
            case 162:
                a = "";
                break;
            case 163:
                a = "";
                break;
            case 164:
                a = "";
                break;
            case 165:
                a = "";
                break;
            case 166:
                a = "";
                break;
            case 167:
                a = "var overfylt.";
                break;
            case 168:
                a = "der det var behov og ingen sperringer ";
                break;
            case 169:
                a = "tilstand.";
                break;
            case 170:
                a = "";
                break;
            case 171:
                a = "";
                break;
            case 172:
                a = "";
                break;
            default:
                a = "";
                break;
        }
        return a;
    }

    private static String Text04(int tall) {
        String a;
        switch (tall) {
            case 140:
                a = "Godt jobba!";
                break;
            case 142:
                a = "Alle må ta seg isammen :-)";
                break;
            case 74:
                a = "samt oljeabsorberende matter";
                break;
            case 144:
                a = "det skal gjøres";
                break;
            case 168:
                a = "var glemt å ta ned etter endt arbeid.";
                break;
            case 77:
                a = "";
                break;
            case 78:
                a = "";
                break;
            case 137:
                a = "Han satte pris på det";
                break;
            case 139:
                a = "Dette satte jeg pris på.";
                break;
            default:
                a = "";
                break;
        }
        return a;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, IOException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vising().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox109;
    private javax.swing.JComboBox<String> jComboBox119;
    private javax.swing.JComboBox<String> jComboBox2;
    public javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox68;
    private javax.swing.JComboBox<String> jComboBox78;
    private javax.swing.JComboBox<String> jComboBox88;
    private javax.swing.JComboBox<String> jComboBox99;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
